var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#RipQP","page":"API","title":"RipQP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"ripqp","category":"page"},{"location":"api/#RipQP.ripqp","page":"API","title":"RipQP.ripqp","text":"ripqp(QM0; mode=:mono, regul=:classic, scaling=true, K=0,\n      max_iter=200, ϵ_pdd=1e-8, ϵ_rb=1e-6, ϵ_rc=1e-6,\n      max_iter32=40, ϵ_pdd32=1e-2, ϵ_rb32=1e-4, ϵ_rc32=1e-4,\n      max_iter64=180, ϵ_pdd64=1e-4, ϵ_rb64=1e-5, ϵ_rc64=1e-5,\n      ϵ_Δx=1e-16, ϵ_μ=1e-9, max_time=1200., display=true)\n\nMinimize a convex quadratic problem. Algorithm stops when the criteria in pdd, rb, and rc are valid. Returns a GenericExecutionStats containing information about the solved problem.\n\nQM0::QuadraticModel{T0}: problem to solve\nmode::Symbol: should be :mono to use the mono-precision mode, or :multi to use   the multi-precision mode (start in single precision and gradually transitions   to T0)\nregul::Symbol: if :classic, then the regularization is performed prior the factorization,   if :dynamic, then the regularization is performed during the factorization, and if :none,   no regularization is used\nscaling::Bool: activate/deactivate scaling of A and Q in QM0\nK::Int: number of centrality corrections (set to -1 for automatic computation)\nmax_iter::Int: maximum number of iterations\nϵ_pdd: primal-dual difference tolerance\nϵ_rb: primal tolerance\nϵ_rc: dual tolerance\nmax_iter32, ϵ_pdd32, ϵ_rb32, ϵ_rc32: same as max_iter, ϵ_pdd, ϵ_rb and   ϵ_rc, but used for switching from single precision to double precision. They are   only usefull when mode=:multi\nmax_iter64, ϵ_pdd64, ϵ_rb64, ϵ_rc64: same as max_iter, ϵ_pdd, ϵ_rb and   ϵ_rc, but used for switching from double precision to quadruple precision. They   are only usefull when mode=:multi and T0=Float128\nϵ_Δx: step tolerance for the current point estimate (note: this criterion   is currently disabled)\nϵ_μ: duality measure tolerance (note: this criterion is currently disabled)\nmax_time: maximum time to solve QM0, in seconds\ndisplay::Bool: activate/deactivate iteration data display\ncreate_itd :: Function: used to create the iter_data type used for the iterations (including the system    to solve)\nsolve! :: Function : used to solve the system at each iteration\n\n\n\n\n\n","category":"function"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"#Home","page":"Home","title":"RipQP.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides a solver for minimizing convex quadratic problems.","category":"page"}]
}
